plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id "jacoco"
	id 'org.barfuin.gradle.jacocolog' version '3.1.0'
	id 'com.adarshr.test-logger' version '3.2.0'
	id 'org.sonarqube' version '3.4.0.2513'
}

group = 'com.gentera.product'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()
}

ext {
	set('springCloudVersion', "2022.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


test {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

task printVersionName {
	def projVersion = project.version
	def rawVersion = projVersion.substring(0,projVersion.lastIndexOf("-"))
	println rawVersion
}

